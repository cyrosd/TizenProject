<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text"/>

<xsl:variable name="tab"><xsl:text>    </xsl:text></xsl:variable>
<xsl:variable name="newline"><xsl:text>
</xsl:text></xsl:variable>
<xsl:variable name="startup_page" select="//page[@startup='true']"/>

<xsl:template match="/">
    <xsl:text>/*******************************************************************************
* This file was generated by Tizen Web UI Builder.
* This file will be auto-generated each and everytime you save your project.
* Do not hand edit this file.
********************************************************************************/
</xsl:text>


<xsl:text>
app.init = function() {
</xsl:text>
	<xsl:value-of select="concat($tab, 'this.setStartPageId(&quot;', $startup_page/@name, '&quot;);', $newline)" />
	<xsl:value-of select="concat($tab, 'this.setMasterPagePath(location.href);', $newline)" />
<xsl:text>
    var rootDir = $.mobile.path.get(app.getMasterPagePath());
    var newPage;

</xsl:text>
	<xsl:apply-templates select="//page"/>
	<xsl:apply-templates select="//viewModel"/>
	<xsl:apply-templates select="//dataSource"/>
    <xsl:apply-templates select="//handlerInfo"/>
    <xsl:apply-templates select="//updateOnStartUp"/>
<xsl:text>
};
</xsl:text>

</xsl:template>

<xsl:template match="page">
<xsl:variable name="html_path" select="concat('&quot;', @htmlPath, '&quot;')"/>
	<xsl:variable name="css_path" select="concat('&quot;', @cssPath, '&quot;')"/>
	<xsl:variable name="managed_css_path" select="concat('&quot;', @managedCssPath, '&quot;')"/>	

    <xsl:value-of select="concat($tab, 'newPage = new _', @name, '_page();', $newline)"/>
    <xsl:value-of select="concat($tab, 'newPage.init_page(', @startup, ', ', '$.mobile.path.makeUrlAbsolute(', $html_path, ', rootDir), $.mobile.path.makeUrlAbsolute(', $css_path, ', rootDir), $.mobile.path.makeUrlAbsolute(', $managed_css_path, ', rootDir));',$newline)"/>
    <xsl:value-of select="concat($tab, 'pageManager.addPage(newPage);', $newline)"/>
    
</xsl:template>

<xsl:template match="dataSource">
	<xsl:variable name="dataModel_name" select="@name"/>
	<xsl:variable name="newDataSource" select="concat($tab, 'app.ds.', $dataModel_name, ' = new uibinding.')"/>
		
	<xsl:choose>
		<xsl:when test="@modelType = 'REMOTECALL'">
			<xsl:value-of select="concat($newDataSource, 'dataSourceRemote', '({', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'url: ', '&quot;', @url, '&quot;', ',', $newline)" disable-output-escaping="yes"/>
			<xsl:value-of select="concat($tab, $tab, 'method: ', '&quot;', @type, '&quot;', ',', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'proxy: ', '&quot;', @proxy, '&quot;', ',', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'query: ', '&quot;', @query, '&quot;', ',', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'sourceType: ', '&quot;', @sourceType, '&quot;', ',', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'timeout: ', '&quot;', @timeout, '&quot;', $newline)"/>
			<xsl:value-of select="concat($tab, '});', $newline)"/>
		</xsl:when>
		<xsl:when test="@modelType = 'STATIC'">
			<xsl:value-of select="concat($newDataSource, 'dataSourceStatic', '({', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'data: ', @jsonData, $newline)" disable-output-escaping="yes"/>
		    <xsl:value-of select="concat($tab, '});', $newline)"/> 		
		</xsl:when>
		<xsl:when test="@modelType = 'RUNTIMEAPI'">
			<xsl:value-of select="concat($newDataSource, 'dataSourceRuntime', '({', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'api: ', '&quot;', @api, '&quot;', $newline)"/>
		    <xsl:value-of select="concat($tab, '});', $newline)"/> 		
		</xsl:when>
	</xsl:choose>
</xsl:template>
 
<xsl:template match="viewModel">
	<xsl:variable name="viewModelName" select="@name"/>
	<xsl:variable name="dataSourceName" select="@dataSource"/>
	
	<xsl:value-of select="concat($tab, 'app.dm.', $viewModelName, ' = {', $newline)"/>
	<xsl:value-of select="concat($tab, $tab, 'viewModel: function (obj) {', $newline)"/>
	<xsl:value-of select="concat($tab, $tab, $tab, 'var _self = this;', $newline)"/>
     
	<xsl:apply-templates select="observableObject"/>     

    <xsl:value-of select="concat($tab, $tab, $tab, 'return _self;', $newline)"/>
    <xsl:value-of select="concat($tab, $tab, '}', $newline)"/> 		
    <xsl:value-of select="concat($tab, '};', $newline)"/>

</xsl:template>

<xsl:template match="handlerInfo">
	<xsl:variable name="dataSourceName" select="@name"/>
	
	<xsl:value-of select="concat($tab, 'app.ds.', $dataSourceName, '.addHandler(', '&quot;', 'success', '&quot;', ', function() {', $newline)"/>
	<xsl:value-of select="concat($tab, $tab, 'var ', $dataSourceName, '= app.ds.', $dataSourceName, ';', $newline)"/>
	<xsl:for-each select="modelInfo">
		<xsl:value-of select="concat($tab, $tab, 'var ', @name, '= app.dm.', @name, ';', $newline)"/>
		<xsl:value-of select="concat($tab, $tab, @name, '.viewModel(', $dataSourceName, '.data);', $newline)"/>
	</xsl:for-each> 		
	<xsl:value-of select="concat($tab, '});', $newline)"/>
</xsl:template>

<xsl:template match="observableObject">
	<xsl:choose>
		<xsl:when test="@type = 'JSONArray'">
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '_self.', '_', @name, ' = function(obj) {', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, $tab, 'var _self = this;', $newline)"/>
			<xsl:apply-templates select="observableObject"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '};', $newline)"/>
			
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '_self.', @name, ' = ko.observableArray();', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, 'for (var i = 0, j = (obj.', @name, '?obj.', @name,'.length:0); i ', '&lt;', ' j; i++) {',$newline)" disable-output-escaping="yes"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, $tab, 'var _obj = obj.',@name,'[i];', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, $tab, '_self.', @name, '.push(new _self._', @name, '(_obj));', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '}', $newline)"/>
		</xsl:when>
		<xsl:when test="@type = 'JSONObject'">
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '_self.', '_', @name, ' = function(obj) {', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, $tab, 'var _self = this;', $newline)"/>
			<xsl:apply-templates select="observableObject"/>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '};', $newline)"/>
			
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '_self.', @name, ' = ko.observable(new _self._', @name, '(obj.', @name, '));', $newline)"/>
			
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="concat($tab, $tab, $tab, $tab, '_self.', @name, ' = ko.observable(obj.', @name,');', $newline)"/>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>

<xsl:template match="updateOnStartUp">
	<xsl:value-of select="concat($tab, 'app.ds.', @name, '.update();', $newline)"/>	
</xsl:template>

<!-- 
<xsl:template match="viewModel">
	<xsl:variable name="viewModelName" select="@name"/>
	<xsl:variable name="dataSourceName" select="@dataSource"/>
	
	<xsl:value-of select="concat($tab, '$.bindingSpace.dm.', $viewModelName, ' = {', $newline)"/>
	<xsl:for-each select=".//observableObject">
		<xsl:variable name="observableObject_value" select="concat('&quot;', @value, '&quot;')"/>
		<xsl:choose>
			<xsl:when test="@type = 'JSONArray'">
				<xsl:value-of select="concat($tab, $tab, @name, ': ko.observableArray(),', $newline)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat($tab, $tab, @name, ': ko.observable(),', $newline)"/>
			</xsl:otherwise>
		</xsl:choose>
    </xsl:for-each> 		
    <xsl:value-of select="concat($tab, '};', $newline)"/>


	<xsl:choose>
		<xsl:when test="$dataSourceName != ''">
		    <xsl:value-of select="concat($tab, '$.bindingSpace.ds.', @name, '.addHandler(', '&quot;', 'successcallback', '&quot;', ', ' ,'function() {', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'var data = $.bindingSpace.ds.', $dataSourceName, '.data;', $newline)"/>
			<xsl:value-of select="concat($tab, $tab, 'var ',  @name, ' = $.bindingSpace.dm.', @name, ';', $newline)"/>
			<xsl:for-each select=".//observableObject">
				<xsl:value-of select="concat($tab, $tab, $viewModelName,'.',@name, '(', $dataSourceName,'.',@name, ');', $newline)"/>
    		</xsl:for-each>		 		
    		<xsl:value-of select="concat($tab, '});', $newline)"/>
		</xsl:when>
	</xsl:choose>

</xsl:template>
 -->

</xsl:stylesheet>
